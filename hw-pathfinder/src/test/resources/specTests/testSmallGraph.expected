# Tests that the search algorithm works properly by
# prioritizing the path with the least cost in a graph
# with different paths to the same node with the same
# number of hops.

# Create a new graph.
created graph graph

# Add several nodes to the graph.
added node E to graph
added node C to graph
added node A to graph
added node D to graph
added node B to graph
added node F to graph
added node G to graph

# Add edges between the nodes.
added edge 5.000 from E to D in graph
added edge 2.000 from E to C in graph
added edge 3.000 from E to F in graph
added edge 15.000 from D to B in graph
added edge 2.000 from B to A in graph
added edge 3.000 from F to G in graph
added edge 12.000 from G to A in graph
added edge 9.000 from C to B in graph
added edge 8.000 from C to G in graph

# Find a path from E to A.
path from E to A:
E to C with weight 2.000
C to B with weight 9.000
B to A with weight 2.000
total cost: 13.000